config(?)
=========
//// set global:nextWfId 0

workflow template
=================
wftempl:{name} ==> wf template info (hash)
  - name
  - uri
  - nextId
  - max instances

wftempl:{name}:instances ==> ids of all workflow "{name}" instances (set)

workflow instance
=================
wf:{id} ==> workflow (hash)
  - uri "/workflow/Montage_65r/instances/2"
  - stat "ready"
  - expire wf:{id} 86400 ==> expiration after 24 hours

wf:{id}:task:{id} ==> workflow task (hash)
  - uri 
  - stat
wf:{id}:data:{id} ==> workflow data element (hash)
  - uri
  - stat

wf:{id}:task:{id}:ins ==> ids of dependencies of a task (sorted set)
   - score: i*1000+j, where i == 0 (dependency not fulfilled) or 1 (dependency fulfilled)
                            j == 0..999 ==> type of dependency (for future use). 0 = data element 
   - setting dependency as fulfilled, e.g.: ZINCRBY wf:{id}:task:{id}:deps 10000 wf:{id}:data:{id}
   - adding a new dependency to the set: ZADD wf:{id}:task:{id}:ins 0 wf:{id}:data:{id} 
   - getting all inputs of a task: ZRANGEBYSCORE wf:{id}:task:{id}
wf:{id}:task:{id}:outs ==> ids of entities dependent on this task (including produced data elements) (sorted set)
   - score: 0..999 ==> type of entitie (for future use). 0 = data element 

wf:{id}:products ==> all data elements produced by a given workflow (hash)
  - data_element_id : task_id_which_produces_it, e.g.   wf:{id}:data:{id} ==> wf:{id}:task:{id}

wf:{id}:data:{id}:sinks ==> all data elements and task consuming them (set)
  - data_element_id : comma_separated_list_of_task_ids, e.g. wf:{id}:data:{id} ==> wf:{id}:task:{id},wf:{id}:task:1

wf:{id}:data:{id}:source ==> task id that produces the data element with given id

wf:{id}:data:uri:{uri}:id ==> id of a data element with a given URI 
(e.g. /workflow/Montage_65r/instances/2/data-1)

wf:{id}:tasks ==> ids wf instance tasks (sorted set)
  - score: 0, 1, 2 ==> task waiting / running / finished

wf:{id}:data ==> ids of wf instance data elements (set)
wf:{id}:data:names ==> index of all wf instance data elements by names (hash)
  - field: data name, value: data element id

Zapytania:
1. lista wszystkich taskow 
==> SMEMBERS wf:{id}:tasks
2. lista inputow / outputow taska
==> SMEMBERS wf:{id}:task:{id}:ins
==> SMEMBERS wf:{id}:task:{id}:outs

3. aktualny status wf / taska / danych
HGET wf:{id} stat
HGET wf:{id}:task:{id} stat
HGET wf:{id}:data:{id} stat

4. znajdz id elementu danych, ktory ma podane uri
GET wf:{id}:data:uri:/workflow/Montage_65r/instances/2/data-1:id

5. czy wszystkie inputy danego taska sa 'ready' ?
ZCARD wf:{id}:task:{id}:ins == ZCOUNT wf:{id}:task:{id}:ins 1 1

6. znajdz wszystkie taski, w ktorych inputem jest dana o podanym id


{      
  "uri" : "/workflow/Montage_65r/instances/2"
  "name" : "montage",
  "version" : "3.3",
  "nTasksLeft" : 143,
  "status" : "ready",
  "data" : [ 
     {  "uri" : "/workflow/Montage_65r/instances/2/data-1",
        "id" : 1,
        "name" : "p2mass-atlas-990502s-j1450080.fits",
        "size" : 0,
        "from" : [ { "job_id" : 1,
                     "job_name" : "mProjectPP",
                     "job_uri" : "/workflow/Montage_65r/instances/2/task-1"
                 } ],

        "to" : [ { "job_id" : 33,
                   "job_name" : "mDiffFit",
                   "job_uri" : "/workflow/Montage_65r/instances/2/task-33"
                 },
                 { "job_id" : 34,
                   "job_name" : "mDiffFit",
                   "job_uri" : "/workflow/Montage_65r/instances/2/task-34"
                 },
                 { "job_id" : 35,
                   "job_name" : "mDiffFit",
                   "job_uri" : "/workflow/Montage_65r/instances/2/task-35"
                }
               ]
      }
  ],
  "job" : [ 
     { 
       "uri" : "/workflow/Montage_65r/instances/2/task-1",
       "id" : "ID000001",
       "job_id" : 1,
       "name" : "mProjectPP",
       "runtime" : "2.0",
       "status" : "waiting",
       "version" : "3.3"
       "executable" : {
          "name" : "mProjectPP",
          "argument" : "-X -x 0.99385 2mass-atlas-990502s-j1450080.fits p2mass-atlas-990502s-j1450080.fits big_region_20130212_013030_8881.hdr",
       }
       "inputs" : 
           [ { "id" : 282,
               "name" : "2mass-atlas-990502s-j1450080.fits",
               "status" : "not_ready",
               "transfer" : "true",
               "uri" : "/workflow/Montage_65r/instances/2/data-282"
            }
           ],
       "outputs" :
           [ { "id" : 1,
              "name" : "p2mass-atlas-990502s-j1450080.fits",
              "register" : "false",
              "status" : "not_ready",
              "transfer" : "false",
              "uri" : "/workflow/Montage_65r/instances/2/data-1"
            } 
           ]
      }
    ]
}
